/**
 * PostPuma - OpenAPI 3.0
 * PostPuma API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@postpuma.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * TagsApi.h
 *
 * 
 */

#ifndef POSTPUMA_TagsApi_H_
#define POSTPUMA_TagsApi_H_



#include "PostPuma/ApiClient.h"

#include "PostPuma/model/CreateTag_request.h"
#include "PostPuma/model/DeleteMediaFiles_200_response.h"
#include "PostPuma/model/ListTags_200_response.h"
#include "PostPuma/model/Tag.h"
#include "PostPuma/model/UpdateTag_request.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace PostPuma {

using namespace org::openapitools::client::model;



class  TagsApi 
{
public:

    explicit TagsApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~TagsApi();

    /// <summary>
    /// Create tag
    /// </summary>
    /// <remarks>
    /// Create tag
    /// </remarks>
    /// <param name="createTagRequest"> (optional)</param>
    pplx::task<std::shared_ptr<Tag>> createTag(
        boost::optional<std::shared_ptr<CreateTag_request>> createTagRequest
    ) const;
    /// <summary>
    /// Delete tag
    /// </summary>
    /// <remarks>
    /// Delete tag
    /// </remarks>
    /// <param name="tagUuid">Tag UUID</param>
    pplx::task<std::shared_ptr<DeleteMediaFiles_200_response>> deleteTag(
        utility::string_t tagUuid
    ) const;
    /// <summary>
    /// Get tag
    /// </summary>
    /// <remarks>
    /// Get tag
    /// </remarks>
    /// <param name="tagUuid">Tag UUID</param>
    pplx::task<std::shared_ptr<Tag>> getTag(
        utility::string_t tagUuid
    ) const;
    /// <summary>
    /// List tags
    /// </summary>
    /// <remarks>
    /// List tags
    /// </remarks>
    pplx::task<std::shared_ptr<ListTags_200_response>> listTags(
    ) const;
    /// <summary>
    /// Update tag
    /// </summary>
    /// <remarks>
    /// Update tag
    /// </remarks>
    /// <param name="tagUuid">Tag UUID</param>
    /// <param name="updateTagRequest"> (optional)</param>
    pplx::task<std::shared_ptr<DeleteMediaFiles_200_response>> updateTag(
        utility::string_t tagUuid,
        boost::optional<std::shared_ptr<UpdateTag_request>> updateTagRequest
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}

#endif /* POSTPUMA_TagsApi_H_ */

