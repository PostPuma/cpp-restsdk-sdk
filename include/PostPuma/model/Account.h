/**
 * PostPuma - OpenAPI 3.0
 * PostPuma API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@postpuma.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Account.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Account_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Account_H_


#include "PostPuma/ModelBase.h"

#include "PostPuma/model/Account_data.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Account_data;


/// <summary>
/// 
/// </summary>
class  Account
    : public ModelBase
{
public:
    Account();
    virtual ~Account();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Account members

    /// <summary>
    /// 
    /// </summary>
    int64_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUuid() const;
    bool uuidIsSet() const;
    void unsetUuid();

    void setUuid(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUsername() const;
    bool usernameIsSet() const;
    void unsetUsername();

    void setUsername(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProvider() const;
    bool providerIsSet() const;
    void unsetProvider();

    void setProvider(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Account_data> getData() const;
    bool dataIsSet() const;
    void unsetData();

    void setData(const std::shared_ptr<Account_data>& value);

    /// <summary>
    /// 
    /// </summary>
    bool isAuthorized() const;
    bool authorizedIsSet() const;
    void unsetAuthorized();

    void setAuthorized(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCreatedAt() const;
    bool createdAtIsSet() const;
    void unsetCreated_at();

    void setCreatedAt(const utility::string_t& value);


protected:
    int64_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Uuid;
    bool m_UuidIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Username;
    bool m_UsernameIsSet;
    utility::string_t m_Provider;
    bool m_ProviderIsSet;
    std::shared_ptr<Account_data> m_Data;
    bool m_DataIsSet;
    bool m_Authorized;
    bool m_AuthorizedIsSet;
    utility::string_t m_Created_at;
    bool m_Created_atIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Account_H_ */
