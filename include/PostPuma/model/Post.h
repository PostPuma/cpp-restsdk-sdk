/**
 * PostPuma - OpenAPI 3.0
 * PostPuma API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@postpuma.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Post.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Post_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Post_H_


#include "PostPuma/ModelBase.h"

#include "PostPuma/model/Version.h"
#include "PostPuma/model/Post_user.h"
#include "PostPuma/model/Tag.h"
#include <cpprest/details/basic_types.h>
#include "PostPuma/model/Account.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Account;
class Version;
class Tag;
class Post_user;


/// <summary>
/// 
/// </summary>
class  Post
    : public ModelBase
{
public:
    Post();
    virtual ~Post();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Post members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUuid() const;
    bool uuidIsSet() const;
    void unsetUuid();

    void setUuid(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStatus() const;
    bool statusIsSet() const;
    void unsetStatus();

    void setStatus(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Account>>& getAccounts();
    bool accountsIsSet() const;
    void unsetAccounts();

    void setAccounts(const std::vector<std::shared_ptr<Account>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Version>>& getVersions();
    bool versionsIsSet() const;
    void unsetVersions();

    void setVersions(const std::vector<std::shared_ptr<Version>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Tag>>& getTags();
    bool tagsIsSet() const;
    void unsetTags();

    void setTags(const std::vector<std::shared_ptr<Tag>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Post_user> getUser() const;
    bool userIsSet() const;
    void unsetUser();

    void setUser(const std::shared_ptr<Post_user>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getScheduledAt() const;
    bool scheduledAtIsSet() const;
    void unsetScheduled_at();

    void setScheduledAt(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPublishedAt() const;
    bool publishedAtIsSet() const;
    void unsetPublished_at();

    void setPublishedAt(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCreatedAt() const;
    bool createdAtIsSet() const;
    void unsetCreated_at();

    void setCreatedAt(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isTrashed() const;
    bool trashedIsSet() const;
    void unsetTrashed();

    void setTrashed(bool value);


protected:
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Uuid;
    bool m_UuidIsSet;
    utility::string_t m_Status;
    bool m_StatusIsSet;
    std::vector<std::shared_ptr<Account>> m_Accounts;
    bool m_AccountsIsSet;
    std::vector<std::shared_ptr<Version>> m_Versions;
    bool m_VersionsIsSet;
    std::vector<std::shared_ptr<Tag>> m_Tags;
    bool m_TagsIsSet;
    std::shared_ptr<Post_user> m_User;
    bool m_UserIsSet;
    utility::string_t m_Scheduled_at;
    bool m_Scheduled_atIsSet;
    utility::string_t m_Published_at;
    bool m_Published_atIsSet;
    utility::string_t m_Created_at;
    bool m_Created_atIsSet;
    bool m_Trashed;
    bool m_TrashedIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Post_H_ */
