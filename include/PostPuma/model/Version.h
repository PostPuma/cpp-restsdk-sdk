/**
 * PostPuma - OpenAPI 3.0
 * PostPuma API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@postpuma.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Version.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Version_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Version_H_


#include "PostPuma/ModelBase.h"

#include "PostPuma/model/Version_content.h"
#include "PostPuma/model/Version_options.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Version_content;
class Version_options;


/// <summary>
/// 
/// </summary>
class  Version
    : public ModelBase
{
public:
    Version();
    virtual ~Version();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Version members

    /// <summary>
    /// 
    /// </summary>
    int32_t getAccountId() const;
    bool accountIdIsSet() const;
    void unsetAccount_id();

    void setAccountId(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    bool isIsOriginal() const;
    bool isOriginalIsSet() const;
    void unsetIs_original();

    void setIsOriginal(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Version_content> getContent() const;
    bool contentIsSet() const;
    void unsetContent();

    void setContent(const std::shared_ptr<Version_content>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Version_options> getOptions() const;
    bool optionsIsSet() const;
    void unsetOptions();

    void setOptions(const std::shared_ptr<Version_options>& value);


protected:
    int32_t m_Account_id;
    bool m_Account_idIsSet;
    bool m_Is_original;
    bool m_Is_originalIsSet;
    std::shared_ptr<Version_content> m_Content;
    bool m_ContentIsSet;
    std::shared_ptr<Version_options> m_Options;
    bool m_OptionsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Version_H_ */
