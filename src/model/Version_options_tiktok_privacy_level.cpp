/**
 * PostPuma - OpenAPI 3.0
 * PostPuma API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@postpuma.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "PostPuma/model/Version_options_tiktok_privacy_level.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



Version_options_tiktok_privacy_level::Version_options_tiktok_privacy_level()
{
    m_Account_0 = false;
    m_Account_0IsSet = false;
}

Version_options_tiktok_privacy_level::~Version_options_tiktok_privacy_level()
{
}

void Version_options_tiktok_privacy_level::validate()
{
    // TODO: implement validation
}

web::json::value Version_options_tiktok_privacy_level::toJson() const
{

    web::json::value val = web::json::value::object();
    
    if(m_Account_0IsSet)
    {
        val[utility::conversions::to_string_t(U("account-0"))] = ModelBase::toJson(m_Account_0);
    }

    return val;
}

bool Version_options_tiktok_privacy_level::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    if(val.has_field(utility::conversions::to_string_t(U("account-0"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("account-0")));
        if(!fieldValue.is_null())
        {
            bool refVal_setAccount0;
            ok &= ModelBase::fromJson(fieldValue, refVal_setAccount0);
            setAccount0(refVal_setAccount0);
        }
    }
    return ok;
}

void Version_options_tiktok_privacy_level::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
    if(m_Account_0IsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("account-0")), m_Account_0));
    }
}

bool Version_options_tiktok_privacy_level::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(U("account-0"))))
    {
        bool refVal_setAccount0;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("account-0"))), refVal_setAccount0 );
        setAccount0(refVal_setAccount0);
    }
    return ok;
}

bool Version_options_tiktok_privacy_level::isAccount0() const
{
    return m_Account_0;
}

void Version_options_tiktok_privacy_level::setAccount0(bool value)
{
    m_Account_0 = value;
    m_Account_0IsSet = true;
}

bool Version_options_tiktok_privacy_level::account0IsSet() const
{
    return m_Account_0IsSet;
}

void Version_options_tiktok_privacy_level::unsetAccount_0()
{
    m_Account_0IsSet = false;
}
}
}
}
}


